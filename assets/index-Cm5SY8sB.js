(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const e of n)if(e.type==="childList")for(const i of e.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function r(n){const e={};return n.integrity&&(e.integrity=n.integrity),n.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?e.credentials="include":n.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function a(n){if(n.ep)return;n.ep=!0;const e=r(n);fetch(n.href,e)}})();const h="https://en.wikipedia.org/w/api.php",y="List_of_ursids",w={action:"parse",page:y,prop:"wikitext",section:"3",format:"json",origin:"*"},d="https://placehold.co/200x150?text=No+Image",E={FETCH_BEAR_DATA:"Unable to load bear data. Please try again later.",FETCH_IMAGE:"Unable to load bear image."},u=async o=>{const t=`${h}?${new URLSearchParams(o).toString()}`,r=await fetch(t);if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()},b=()=>{const o=document.querySelector(".show-hide"),t=document.querySelector(".comment-wrapper");if(!t){console.error("Comment wrapper element not found");return}if(t.style.display="none",!o){console.error("Show/Hide button not found");return}o.onclick=()=>{o.textContent==="Show comments"?(o.textContent="Hide comments",t.style.display="block"):(o.textContent="Show comments",t.style.display="none")}},S=()=>{const o=document.querySelector(".comment-form"),t=document.querySelector("#name"),r=document.querySelector("#comment"),a=document.querySelector(".comment-container");if(!o||!t||!r||!a){console.error("Required form elements not found in the DOM.");return}o.onsubmit=n=>{n.preventDefault();const e=document.createElement("li"),i=document.createElement("p"),c=document.createElement("p"),l=t.value,m=r.value;l&&m?(i.textContent=l,c.textContent=m,e.appendChild(i),e.appendChild(c),a.appendChild(e),t.value="",r.value=""):alert("Please enter both your name and comment.")}},C=o=>{const t=document.querySelector(".more_bears");if(!t){console.error("More Bears section not found in the DOM.");return}o.length===0?t.innerHTML="<p>No bear data available.</p>":(t.innerHTML="",o.forEach(r=>{const a=document.createElement("div"),n=document.createElement("h3");n.textContent=`${r.name} (${r.binomial})`;const e=document.createElement("img");e.src=r.image,e.alt=r.name,e.style.width="200px",e.style.height="auto",e.onerror=()=>{e.src=d};const i=document.createElement("p");i.innerHTML=`<strong>Range:</strong> ${r.range}`,a.appendChild(n),a.appendChild(e),a.appendChild(i),t.appendChild(a)}))},M=o=>{const t=document.querySelector(".more_bears");if(!t){console.error("More Bears section not found in the DOM.");return}const r=document.createElement("p");r.classList.add("error-message"),r.textContent=o,t.innerHTML="",t.appendChild(r)},v=async()=>{try{const o=await u(w);if(!o.parse||!o.parse.wikitext)throw new Error("Invalid data structure returned from API.");const t=o.parse.wikitext["*"],r=await L(t);C(r)}catch(o){console.error("Error fetching bear data:",o),M(E.FETCH_BEAR_DATA)}},L=async o=>{const t=o.split("{{Species table/end}}"),r=[];for(const a of t){const n=a.split("{{Species table/row");for(const e of n){const i=e.match(/\|name=\[\[(.*?)\]\]/),c=e.match(/\|binomial=(.*?)\n/),l=e.match(/\|image=(.*?)\n/),m=e.match(/\|range\s*=\s*([^|\n]*)/);if(i&&c&&l){const p=l[1].trim().replace("File:",""),f=await P(p);let s="No range information available";m&&(s=m[1].trim(),s=s.replace(/\[\[|\]\]/g,"").trim(),s=s.replace(/''/g,"").trim(),s||(s="Range information not available."));const g={name:i[1],binomial:c[1].replace(/''/g,"").trim(),image:f,range:s};r.push(g)}}}return r},P=async o=>{try{const t={action:"query",titles:`File:${o}`,prop:"imageinfo",iiprop:"url",format:"json",origin:"*"},r=await u(t);if(!r.query||!r.query.pages)throw new Error("Invalid data structure returned from image API.");const a=r.query.pages,n=Object.values(a);if(n.length===0)throw new Error(`No image info available for file: ${o}`);const e=n[0];if(!e.imageinfo||e.imageinfo.length===0)throw new Error(`No image info available for file: ${o}`);return e.imageinfo[0].url}catch(t){return console.error(`Error fetching image URL for ${o}:`,t),d}};b();S();v();
